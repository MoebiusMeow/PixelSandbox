
# You may find this .hjson file approach to translations easier for your mod.
# .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Each translation entry in .hjson files contains a key and a value. The key is determined following the rules of JSON [https://www.w3schools.com/js/js_json_syntax.asp]
# The Key automatically inherits "Mods.ModNameHere.", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.
# The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix

Mods: {
	PixelSandbox: {
		ItemName: {
			SandBag: 沙袋
			VacuumCleaner: 吸尘器
		}

		ItemTooltip: {
			SandBag:
				'''
				一袋沙子
				[c/00FF00:可被提炼机提取]

				‘嗯... 里面是啥?’
				'''

			VacuumCleaner:
				'''
				一台先进的矮人工艺吸尘器
				可以吸收沙粒，产生{$Mods.PixelSandbox.ItemName.SandBag}
				[c/00FF00:在背包右键取出装满的沙袋]

				‘一位沙子女巫！’
				'''
		}

		MapObject: {
		}

		Misc: {
			SandBagContains: 内含
			SandBagFilled: 个装满的沙袋
			SandBagsFilled: 个装满的沙袋
			SandBagCurrent: 当前沙袋填充
			SandBagCurrentFilled: ""
			SandBagFilledHint: 袋!
			SandBagsFilledHint: 袋!
		}
	}
}
