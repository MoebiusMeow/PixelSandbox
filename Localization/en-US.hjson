# You may find this .hjson file approach to translations easier for your mod.
# .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Each translation entry in .hjson files contains a key and a value. The key is determined following the rules of JSON [https://www.w3schools.com/js/js_json_syntax.asp]
# The Key automatically inherits "Mods.ModNameHere.", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.
# The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix

Mods: {
	PixelSandbox: {
		ItemName: {
			SandBag: Sandbag
			VacuumCleaner: Vacuum Cleaner
		}

		ItemTooltip: {
			SandBag:
				'''
				A bag of collected sand
				[c/00FF00:Can be used in Extractinator]

				‘Hmm... What's inside?’
				'''

			VacuumCleaner:
				'''
				An advanced dwarf-tech vacuum cleaner
				Can be used to collect sand, producing {$Mods.PixelSandbox.ItemName.SandBag}
				[c/00FF00:Right click in inventory to take out filled bags]

				‘A sand witch!’
				'''
		}

		MapObject: {
		}

		Misc: {
			SandBagContains: Contains 
			SandBagFilled: filled sandbag
			SandBagsFilled: filled sandbags
			SandBagCurrent: Current Sandbag 
			SandBagCurrentFilled: filled
			SandBagFilledHint: Sandbag Filled!
			SandBagsFilledHint: Sandbags Filled!
		}
	}
}
